(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{343:function(t,a,s){"use strict";s.r(a);var r=s(3),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"why"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[t._v("#")]),t._v(" Why")]),t._v(" "),s("p",[t._v("如果实现某一个功能有多条路径，每一条途径对应一种算法，可以使用策略模式，定义一些独立的类来封装不同算法。策略模式的主要目的是将算法的定义和使用分开，也就是将算法的行为和环境分开。")]),t._v(" "),s("p",[s("strong",[t._v("策略模式（Strategy Pattern）")]),t._v("：定义一些列算法类，将每一个算法封装起来，并让它们可以相互替换，让算法独立于使用它的客户而变化，别名政策模式（Policy）。")]),t._v(" "),s("h2",{attrs:{id:"what"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what"}},[t._v("#")]),t._v(" What")]),t._v(" "),s("h3",{attrs:{id:"uml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uml"}},[t._v("#")]),t._v(" UML")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blogbucket-1252640517.cos.ap-beijing.myqcloud.com/img/strategy.png",alt:"策略模式"}})]),t._v(" "),s("h3",{attrs:{id:"适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),s("ul",[s("li",[t._v("一个系统需要动态的在几种算法中选择一种")]),t._v(" "),s("li",[t._v("一个对象有很多行为")]),t._v(" "),s("li",[t._v("对客户端隐藏复杂、与算法相关的数据结构")])])])}),[],!1,null,null,null);a.default=e.exports}}]);