(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{349:function(t,a,s){"use strict";s.r(a);var r=s(3),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"why"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[t._v("#")]),t._v(" Why")]),t._v(" "),s("p",[t._v("当需要创建跟已知对象相似的对象时可以使用原型模式。")]),t._v(" "),s("h2",{attrs:{id:"what"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what"}},[t._v("#")]),t._v(" What")]),t._v(" "),s("h3",{attrs:{id:"浅拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝"}},[t._v("#")]),t._v(" 浅拷贝")]),t._v(" "),s("p",[t._v("使用浅拷贝克隆对象时，值类型的属性会复制一份；引用类型的属性则会把引用地址复制一份，也就是说原型对象和克隆对象的引用属性会指向同一个对象。")]),t._v(" "),s("h3",{attrs:{id:"深拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝"}},[t._v("#")]),t._v(" 深拷贝")]),t._v(" "),s("p",[t._v("对比浅拷贝的区别在于引用的对象也会被复制，可以通过序列化的方式实现。")])])}),[],!1,null,null,null);a.default=e.exports}}]);