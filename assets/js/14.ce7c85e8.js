(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{358:function(t,a,r){"use strict";r.r(a);var e=r(3),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"why"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[t._v("#")]),t._v(" Why")]),t._v(" "),r("p",[t._v("运用共享技术支持大量细粒度对象的复用。系统只使用少量对象，而这些对象极为相似，状态变化很小，可以实现对象的多次复用。由于享元模式要求能够共享的对象都是细粒度对象，又称作轻量级模式（Flyweight Pattern）。")]),t._v(" "),r("h2",{attrs:{id:"what"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what"}},[t._v("#")]),t._v(" What")]),t._v(" "),r("p",[t._v("在享元模式中，存储共享实例对象的地方称作享元池（Flyweight Pool）。享元模式共享的关键在于区分了内部状态和外部状态。")]),t._v(" "),r("p",[r("strong",[t._v("内部状态")]),t._v("：存储在享元对象内部并且不会随环境改变而改变，可以共享。")]),t._v(" "),r("p",[r("strong",[t._v("外部状态")]),t._v("：随环境变化而改变，不可共享。")]),t._v(" "),r("p",[t._v("将具有相同内部状态的对象存储在享元池中存取，即可实现复用。")]),t._v(" "),r("h3",{attrs:{id:"uml"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#uml"}},[t._v("#")]),t._v(" UML")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://blogbucket-1252640517.cos.ap-beijing.myqcloud.com/img/flyweight.png",alt:"享元模式"}})]),t._v(" "),r("h3",{attrs:{id:"角色说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#角色说明"}},[t._v("#")]),t._v(" 角色说明")]),t._v(" "),r("p",[r("strong",[t._v("Flyweight（抽象享元类）")]),t._v("：声明了具体享元类的方法，可以向外部提供享元对象的内部数据，也可以通过这些方法设置外部状态。")]),t._v(" "),r("p",[r("strong",[t._v("ConcreteFlyweight（具体享元类）")]),t._v("：为内部状态提供了存储空间，可以结合单例模式，为每一个具体享元类提供唯一的享元对象。")]),t._v(" "),r("p",[r("strong",[t._v("UnsharedConcreteFlyweight（非共享具体享元类）")]),t._v("：不是所有的具体享元类都需要被共享。")]),t._v(" "),r("p",[r("strong",[t._v("FlyweightFactory（享元工程类）")]),t._v("：提供一个用于存储享元对象的享元池，负责新建或者返回现存的对象给用户。")]),t._v(" "),r("h3",{attrs:{id:"单纯享元模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#单纯享元模式"}},[t._v("#")]),t._v(" 单纯享元模式")]),t._v(" "),r("p",[t._v("所有的具体享元类都是可以共享的")]),t._v(" "),r("h3",{attrs:{id:"复合享元模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#复合享元模式"}},[t._v("#")]),t._v(" 复合享元模式")]),t._v(" "),r("p",[t._v("如果希望为多个 内部状态不同的享元对象设置相同的外部状态，可以考虑将一些单纯享元对象使用组合模式可以形成复合享元对象")]),t._v(" "),r("h3",{attrs:{id:"示例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),r("blockquote",[r("p",[t._v("Sunny软件公司欲开发一个多功能文档编辑器，在文本文档中可以插入图片、动画、视频等多媒体资料，为了节约系统资源，相同的图片、动画和视频在同一个文档中只需保存一份，但是可以多次重复出现，而且它们每次出现时位置和大小均可不同。试使用享元模式设计该文档编辑器。")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/ShengM/designmodedemo/tree/master/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[t._v("示例链接")]),r("OutboundLink")],1),t._v(")")])])}),[],!1,null,null,null);a.default=s.exports}}]);