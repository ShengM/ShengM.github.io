(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{358:function(t,a,s){"use strict";s.r(a);var r=s(3),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"why"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[t._v("#")]),t._v(" Why")]),t._v(" "),s("p",[t._v("如果一个系统中对象之间的联系呈现网状结构，存在大量的多对多联系，会导致系统非常复杂，可以使用中介者类来达到降低系统耦合度的目的，将对象之间的一些交互行为从各个对象中分离出来，集中封装到一个中介者对象中进行统一协调。将多对多转化为一对多，是"),s("strong",[t._v("迪米特法则")]),t._v("的一个应用。")]),t._v(" "),s("h2",{attrs:{id:"what"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what"}},[t._v("#")]),t._v(" What")]),t._v(" "),s("h3",{attrs:{id:"uml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uml"}},[t._v("#")]),t._v(" UML")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blogbucket-1252640517.cos.ap-beijing.myqcloud.com/img/media.png",alt:"中介者模式"}})]),t._v(" "),s("h3",{attrs:{id:"角色"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#角色"}},[t._v("#")]),t._v(" 角色")]),t._v(" "),s("p",[s("strong",[t._v("Colleague（抽象同事类）")]),t._v("：定义了同事类公共的方法，同时维持了一个对抽象中介者的引用，子类可以通过该引用与中介者通信。")]),t._v(" "),s("h3",{attrs:{id:"适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),s("ul",[s("li",[t._v("系统中对象之间存在复杂的引用关系")]),t._v(" "),s("li",[t._v("一个对象引用了其他很多对象导致难以复用")]),t._v(" "),s("li",[t._v("希望通过一个中间类来封装多个类的行为，而又不想生成太多子类")])])])}),[],!1,null,null,null);a.default=e.exports}}]);