(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{351:function(t,a,s){"use strict";s.r(a);var r=s(3),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"why"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[t._v("#")]),t._v(" Why")]),t._v(" "),s("p",[t._v("如果某个方法的实现需要多个步骤，其中有些步骤是固定的，有些步骤不固定，存在可变性。可用模板方法模式进行设计，实现代码复用，保证系统灵活性。")]),t._v(" "),s("p",[s("strong",[t._v("模板方法模式（Template Method Pattern）")]),t._v("：定义一个操作中算法的框架，而将一些步骤延迟到子类中。模板方法使子类可以不改变一个算法的结构即可重新定义该算法的某些特定步骤。")]),t._v(" "),s("h2",{attrs:{id:"what"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what"}},[t._v("#")]),t._v(" What")]),t._v(" "),s("h3",{attrs:{id:"uml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uml"}},[t._v("#")]),t._v(" UML")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blogbucket-1252640517.cos.ap-beijing.myqcloud.com/img/template.png",alt:"模板方法模式"}})]),t._v(" "),s("h3",{attrs:{id:"模板方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板方法"}},[t._v("#")]),t._v(" 模板方法")]),t._v(" "),s("p",[t._v("指定义在抽象类中、把基本操作方法组合在一起形成一个总算法或一个总行为的方法。")]),t._v(" "),s("h3",{attrs:{id:"基本方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本方法"}},[t._v("#")]),t._v(" 基本方法")]),t._v(" "),s("p",[t._v("是实现算法各个步骤的方法，是模板方法的组成部分。分为三种：")]),t._v(" "),s("h4",{attrs:{id:"抽象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抽象方法"}},[t._v("#")]),t._v(" 抽象方法")]),t._v(" "),s("h4",{attrs:{id:"具体方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体方法"}},[t._v("#")]),t._v(" 具体方法")]),t._v(" "),s("h4",{attrs:{id:"钩子方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#钩子方法"}},[t._v("#")]),t._v(" 钩子方法")]),t._v(" "),s("p",[t._v("可以控制方法的执行，对一个算法进行约束")]),t._v(" "),s("h3",{attrs:{id:"适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),s("ul",[s("li",[t._v("对一些复杂的算法进行切割，将其算法中固定不变的部分设计为模板方法和父类具体方法，而将可以改变的细节由其子类实现")]),t._v(" "),s("li",[t._v("各子类中公共的行为应该被提取出来并集中到公共父类中避免代码重复")]),t._v(" "),s("li",[t._v("需要通过子类来决定父类算法中某个步骤是否执行，实现子类对父类的反向控制")])])])}),[],!1,null,null,null);a.default=e.exports}}]);