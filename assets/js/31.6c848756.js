(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{342:function(t,a,r){"use strict";r.r(a);var s=r(3),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"why"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[t._v("#")]),t._v(" Why")]),t._v(" "),r("p",[t._v("装饰模式可以在不改变一个对象本身功能的前提上给对象增加额外的新行为。可以替代继承给对象动态增加职责。")]),t._v(" "),r("h2",{attrs:{id:"what"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what"}},[t._v("#")]),t._v(" What")]),t._v(" "),r("h3",{attrs:{id:"uml"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#uml"}},[t._v("#")]),t._v(" UML")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://blogbucket-1252640517.cos.ap-beijing.myqcloud.com/img/decorator.png",alt:"装饰器模式"}})]),t._v(" "),r("h3",{attrs:{id:"角色说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#角色说明"}},[t._v("#")]),t._v(" 角色说明")]),t._v(" "),r("p",[r("strong",[t._v("Decorator（抽象装饰类）")]),t._v("：继承自需扩展的抽象类型，对客户端透明，可以让客户端以一致的方式处理未被装饰和装饰后的对象。")]),t._v(" "),r("h3",{attrs:{id:"透明装饰模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#透明装饰模式"}},[t._v("#")]),t._v(" 透明装饰模式")]),t._v(" "),r("p",[t._v("客户端完全针对抽象编程")]),t._v(" "),r("h3",{attrs:{id:"半透明装饰模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#半透明装饰模式"}},[t._v("#")]),t._v(" 半透明装饰模式")]),t._v(" "),r("p",[t._v("有时候需要单独调用新增的业务方法，对于客户端来说，需要知道具体的装饰器类型")]),t._v(" "),r("h3",{attrs:{id:"示例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),r("blockquote",[r("p",[t._v("Sunny软件公司欲开发了一个数据加密模块，可以对字符串进行加密。最简单的加密算法通过对字母进行移位来实现，同时还提供了稍复杂的逆向输出加密，还提供了更为高级的求模加密。用户先使用最简单的加密算法对字符串进行加密，如果觉得还不够可以对加密之后的结果使用其他加密算法进行二次加密，当然也可以进行第三次加密。试使用装饰模式设计该多重加密系统。")])]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/ShengM/designmodedemo/tree/master/%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[t._v("示例链接")]),r("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);